"use strict";

var userPlace = document.querySelector(".you"),
  userTablePlace = userPlace.querySelector(".table__block-place"),
  cases = document.querySelectorAll(".bonus__boxes-item"),
  getBtn = document.querySelector(".get-btn"),
  levels = document.querySelectorAll(".bonus__progress-lvl"),
  progressPopup = document.querySelector(".bonus__progress-popup"),
  progressPopupBtn = document.querySelector(".bonus__progress-title-btn"),
  progressPopupClose = document.querySelector(".bonus__progress-popup-close"),
  updPopup = document.querySelector(".bonus__warning"),
  updPopupBtn = document.querySelector(".bonus__upd-btn"),
  updPopupClose = document.querySelector(".bonus__warning-close"),
  resultPopup = document.querySelector(".result__subtitle-popup"),
  resultPopupBtn = document.querySelector(".result__subtitle-btn"),
  resultPopupBtnClose = document.querySelector(".result__subtitle-popup-close");
var currentLvl = sessionStorage.getItem("currentLvl") ? Number(sessionStorage.getItem("currentLvl")) : 1;
var lvlStatus = checkStatus();
var betWinCounter = sessionStorage.getItem("betWinCounter") ? Number(sessionStorage.getItem("betWinCounter")) : 0;
function checkStatus() {
  betWinCounter < 6 ? document.querySelector(".result__table").classList.add("_lock") : null;
  var activeLvl = document.querySelector(".bonus__progress-lvl._active");
  var conditions = {
    bet: {
      1: betWinCounter > 1,
      2: betWinCounter > 3,
      3: betWinCounter > 5
    },
    lvl: {
      1: currentLvl === 1,
      2: currentLvl === 2,
      3: currentLvl === 3
    }
  };
  getBtn.classList.add("_lock");
  if (conditions.bet[currentLvl] && conditions.lvl[currentLvl]) {
    lvlStatus = true;
    refreshLvl(currentLvl, lvlStatus);
    getBtn.classList.remove("_lock");
    if (activeLvl) activeLvl.classList.add("_up");
    return lvlStatus;
  }
  lvlStatus = false;
  refreshLvl(currentLvl, lvlStatus);
  return false;
}
function refreshLvl(currentLvl, lvlStatus) {
  levels.forEach(function (lvl, i) {
    lvl.classList.remove("_active");
    lvl.classList.remove("_done");
    lvl.classList.remove("_void");
    lvl.classList.remove("_up");
    if (++i === currentLvl) {
      lvl.classList.add("_active");
      if (lvlStatus === true) {
        lvl.classList.add("_up");
      }
      if (currentLvl === 1 && betWinCounter <= 0 && lvlStatus === false) {
        lvl.classList.add("_void");
      }
      if (currentLvl === 1 && betWinCounter <= 0 && lvlStatus === true) {
        lvl.classList.remove("_void");
      }
      if (currentLvl === 2 && betWinCounter <= 2 && lvlStatus === false) {
        lvl.classList.add("_void");
      }
      if (currentLvl === 2 && betWinCounter <= 2 && lvlStatus === true) {
        lvl.classList.remove("_void");
      }
      if (currentLvl === 3 && betWinCounter <= 4 && lvlStatus === false) {
        lvl.classList.add("_void");
      }
      if (currentLvl === 3 && betWinCounter <= 4 && lvlStatus === true) {
        lvl.classList.remove("_void");
      }
    } else {
      lvl.classList.remove("_active");
    }
    // console.log(i < currentLvl, i , currentLvl, lvl)
    i < currentLvl ? lvl.classList.add("_done") : null;
  });
}
function refreshCases(currentLvl) {
  cases.forEach(function (box, i) {
    box.classList.remove("_active", "_left", "_right", "_lock");
  });
  var activeIndex = currentLvl - 1;
  if (activeIndex >= cases.length) {
    activeIndex = cases.length - 1;
  }
  var prevIndex = activeIndex - 1 < 0 ? cases.length - 1 : activeIndex - 1;
  var nextIndex = activeIndex + 1 >= cases.length ? 0 : activeIndex + 1;
  cases[activeIndex].classList.add("_active");
  cases[prevIndex].classList.add("_left");
  cases[nextIndex].classList.add("_right");
  cases.forEach(function (box, i) {
    if (i !== activeIndex) {
      box.classList.add("_lock");
    }
  });
}
refreshCases(currentLvl);
function lvlUp() {
  currentLvl = currentLvl + 1;
  sessionStorage.setItem("currentLvl", "".concat(currentLvl));
  checkStatus();
  return lvlStatus;
}
checkStatus();
var idArr = userTablePlace.textContent.split("");

// console.log(idArr)

if (idArr.length === 1) {
  userTablePlace.classList.add('_one');
}
if (idArr.length === 2) {
  userTablePlace.classList.add('_two');
}
if (idArr.length === 3) {
  userTablePlace.classList.add('_three');
}
if (idArr.length === 4) {
  userTablePlace.classList.add('_four');
}
if (idArr.length === 5) {
  userTablePlace.classList.add('_five');
}
function openCaseAnim(box) {
  box.classList.add("shake");
  box.querySelector(".box__cap").classList.add("open");
  getBtn.classList.add("_lock");
  setTimeout(function () {
    box.querySelector(".box__cap-front").classList.add("hide");
  }, 300);
  setTimeout(function () {
    box.classList.add("_show");
  }, 450);
  setTimeout(function () {
    lvlUp();
    refreshCases(currentLvl);
    checkStatus();
  }, 4000);
}
getBtn.addEventListener('click', function () {
  cases.forEach(function (box, i) {
    if (box.classList.contains("_active")) {
      openCaseAnim(box);
      // getBtn.classList.add("_lock")
      // checkStatus()
    }
  });
});

function setPopup(btnOpen, btnClose, popup, hide) {
  btnOpen.addEventListener("click", function () {
    popup.classList.remove("hide");
    if (hide) {
      btnOpen.parentNode.style.opacity = "0";
    }
  });
  if (btnClose) {
    btnClose.addEventListener("click", function () {
      popup.classList.add("hide");
      if (hide) {
        btnOpen.parentNode.style.opacity = "1";
      }
    });
    document.addEventListener("click", function (e) {
      if (!popup.contains(e.target) && e.target !== btnOpen) {
        popup.classList.add("hide");
      }
    });
  }
}
setPopup(progressPopupBtn, progressPopupClose, progressPopup);
setPopup(updPopupBtn, updPopupClose, updPopup, true);
setPopup(resultPopupBtn, resultPopupBtnClose, resultPopup, true);
function startCountdown(endTime) {
  var hoursEls = document.querySelectorAll(".timer__hours-item");
  var minutesEls = document.querySelectorAll(".timer__minutes-item");
  var secondsEls = document.querySelectorAll(".timer__seconds-item");
  function updateTimer() {
    var now = new Date().getTime();
    var timeLeft = endTime - now;
    if (timeLeft <= 0) {
      clearInterval(timerInterval);
      updateDigits(hoursEls, "00");
      updateDigits(minutesEls, "00");
      updateDigits(secondsEls, "00");
      return;
    }
    var hours = Math.floor(timeLeft / (1000 * 60 * 60) % 24);
    var minutes = Math.floor(timeLeft / (1000 * 60) % 60);
    var seconds = Math.floor(timeLeft / 1000 % 60);
    updateDigits(hoursEls, String(hours).padStart(2, "0"));
    updateDigits(minutesEls, String(minutes).padStart(2, "0"));
    updateDigits(secondsEls, String(seconds).padStart(2, "0"));
  }
  function updateDigits(elements, value) {
    elements[0].textContent = value[0];
    elements[1].textContent = value[1];
  }
  updateTimer();
  var timerInterval = setInterval(updateTimer, 1000);
}
var now = new Date();
var endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59).getTime();
startCountdown(endOfDay);
document.querySelector(".menu-btn").addEventListener("click", function () {
  document.querySelector(".menu-test").classList.toggle("hidden");
});
document.querySelector(".btn-lvl").addEventListener("click", function () {
  document.querySelector(".lvl-menu").classList.toggle("hidden");
});
var lvl1 = document.querySelector(".lvl-1");
var lvl2 = document.querySelector(".lvl-2");
var lvl3 = document.querySelector(".lvl-3");
var lvlUpBtn = document.querySelector(".lvl-up");
var betWin = document.querySelector(".bet-win");
var betClear = document.querySelector(".bet-clear");
var btnLock = document.querySelector(".btn-lock");
betWin.textContent = "win bet: ".concat(betWinCounter);
betWin.addEventListener("click", function () {
  betWinCounter = sessionStorage.getItem("betWinCounter") ? Number(sessionStorage.getItem("betWinCounter")) : 0;
  betWinCounter = betWinCounter + 1;
  sessionStorage.setItem("betWinCounter", betWinCounter);
  betWin.textContent = "win bet: ".concat(betWinCounter);
  // refreshLvl(currentLvl)
  checkStatus();
});
betClear.addEventListener("click", function () {
  sessionStorage.removeItem("betWinCounter");
  betWinCounter = 0;
  betWin.textContent = "win bet: 0";
  checkStatus();
  sessionStorage.setItem("currentLvl", "1");
  window.location.reload();
  // refreshLvl(currentLvl, lvlStatus)
});

lvl1.addEventListener("click", function () {
  sessionStorage.setItem("currentLvl", "1");
  window.location.reload();
});
lvl2.addEventListener("click", function () {
  sessionStorage.setItem("currentLvl", "2");
  window.location.reload();
});
lvl3.addEventListener("click", function () {
  sessionStorage.setItem("currentLvl", "3");
  window.location.reload();
});
lvlUpBtn.addEventListener("click", function () {
  lvlStatus = !lvlStatus;
  checkStatus();
  lvlStatus = !lvlStatus;
});
btnLock.addEventListener("click", function () {
  document.querySelector(".result__table").classList.toggle("_lock");
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
