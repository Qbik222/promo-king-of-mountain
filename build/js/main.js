"use strict";

var userPlace = document.querySelector(".you");
var userTablePlace = userPlace.querySelector(".table__block-place");
var idArr = userTablePlace.textContent.split("");
console.log(idArr);
if (idArr.length === 1) {
  userTablePlace.classList.add('_one');
}
if (idArr.length === 2) {
  userTablePlace.classList.add('_two');
}
if (idArr.length === 3) {
  userTablePlace.classList.add('_three');
}
if (idArr.length === 4) {
  userTablePlace.classList.add('_four');
}
if (idArr.length === 5) {
  userTablePlace.classList.add('_five');
}
document.querySelector(".open-btn").addEventListener("click", function () {
  document.querySelector(".box").classList.toggle("shake");
  // setTimeout(() =>{
  //
  // }, 1000)
  document.querySelector(".box__cap").classList.toggle('open');
  setTimeout(function () {
    document.querySelector(".box__cap-front").classList.toggle("hide");
  }, 450);
});
function startCountdown(endTime) {
  var hoursEls = document.querySelectorAll(".timer__hours-item");
  var minutesEls = document.querySelectorAll(".timer__minutes-item");
  var secondsEls = document.querySelectorAll(".timer__seconds-item");
  function updateTimer() {
    var now = new Date().getTime();
    var timeLeft = endTime - now;
    if (timeLeft <= 0) {
      clearInterval(timerInterval);
      updateDigits(hoursEls, "00");
      updateDigits(minutesEls, "00");
      updateDigits(secondsEls, "00");
      return;
    }
    var hours = Math.floor(timeLeft / (1000 * 60 * 60) % 24);
    var minutes = Math.floor(timeLeft / (1000 * 60) % 60);
    var seconds = Math.floor(timeLeft / 1000 % 60);
    updateDigits(hoursEls, String(hours).padStart(2, "0"));
    updateDigits(minutesEls, String(minutes).padStart(2, "0"));
    updateDigits(secondsEls, String(seconds).padStart(2, "0"));
  }
  function updateDigits(elements, value) {
    elements[0].textContent = value[0];
    elements[1].textContent = value[1];
  }
  updateTimer();
  var timerInterval = setInterval(updateTimer, 1000);
}
var now = new Date();
var endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59).getTime();
startCountdown(endOfDay);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsidXNlclBsYWNlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidXNlclRhYmxlUGxhY2UiLCJpZEFyciIsInRleHRDb250ZW50Iiwic3BsaXQiLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZSIsInNldFRpbWVvdXQiLCJzdGFydENvdW50ZG93biIsImVuZFRpbWUiLCJob3Vyc0VscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJtaW51dGVzRWxzIiwic2Vjb25kc0VscyIsInVwZGF0ZVRpbWVyIiwibm93IiwiRGF0ZSIsImdldFRpbWUiLCJ0aW1lTGVmdCIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lckludGVydmFsIiwidXBkYXRlRGlnaXRzIiwiaG91cnMiLCJNYXRoIiwiZmxvb3IiLCJtaW51dGVzIiwic2Vjb25kcyIsIlN0cmluZyIsInBhZFN0YXJ0IiwiZWxlbWVudHMiLCJ2YWx1ZSIsInNldEludGVydmFsIiwiZW5kT2ZEYXkiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQztBQUNoRCxJQUFNQyxjQUFjLEdBQUdILFNBQVMsQ0FBQ0UsYUFBYSxDQUFDLHFCQUFxQixDQUFDO0FBRXJFLElBQUlFLEtBQUssR0FBR0QsY0FBYyxDQUFDRSxXQUFXLENBQUNDLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFFaERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixLQUFLLENBQUM7QUFFbEIsSUFBR0EsS0FBSyxDQUFDSyxNQUFNLEtBQUssQ0FBQyxFQUFDO0VBQ2xCTixjQUFjLENBQUNPLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUN4QztBQUNBLElBQUdQLEtBQUssQ0FBQ0ssTUFBTSxLQUFLLENBQUMsRUFB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QUFRLEVBQUVDLEtBQUssRUFBRTtJQUNuQ0QsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDL0IsV0FBVyxHQUFHZ0MsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNsQ0QsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDL0IsV0FBVyxHQUFHZ0MsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUN0QztFQUVBaEIsV0FBVyxFQUFFO0VBQ2IsSUFBTU0sYUFBYSxHQUFHVyxXQUFXLENBQUNqQixXQUFXLEVBQUUsSUFBSSxDQUFDO0FBQ3hEO0FBRUEsSUFBTUMsR0FBRyxHQUFHLElBQUlDLElBQUksRUFBRTtBQUN0QixJQUFNZ0IsUUFBUSxHQUFHLElBQUloQixJQUFJLENBQUNELEdBQUcsQ0FBQ2tCLFdBQVcsRUFBRSxFQUFFbEIsR0FBRyxDQUFDbUIsUUFBUSxFQUFFLEVBQUVuQixHQUFHLENBQUNvQixPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDbEIsT0FBTyxFQUFFO0FBRWpHVCxjQUFjLENBQUN3QixRQUFRLENBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVzZXJQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIueW91XCIpXG5jb25zdCB1c2VyVGFibGVQbGFjZSA9IHVzZXJQbGFjZS5xdWVyeVNlbGVjdG9yKFwiLnRhYmxlX19ibG9jay1wbGFjZVwiKVxuXG5sZXQgaWRBcnIgPSB1c2VyVGFibGVQbGFjZS50ZXh0Q29udGVudC5zcGxpdChcIlwiKVxuXG5jb25zb2xlLmxvZyhpZEFycilcblxuaWYoaWRBcnIubGVuZ3RoID09PSAxKXtcbiAgICB1c2VyVGFibGVQbGFjZS5jbGFzc0xpc3QuYWRkKCdfb25lJylcbn1cbmlmKGlkQXJyLmxlbmd0aCA9PT0gMil7XG4gICAgdXNlclRhYmxlUGxhY2UuY2xhc3NMaXN0LmFkZCgnX3R3bycpXG59XG5pZihpZEFyci5sZW5ndGggPT09IDMpe1xuICAgIHVzZXJUYWJsZVBsYWNlLmNsYXNzTGlzdC5hZGQoJ190aHJlZScpXG59XG5pZihpZEFyci5sZW5ndGggPT09IDQpe1xuICAgIHVzZXJUYWJsZVBsYWNlLmNsYXNzTGlzdC5hZGQoJ19mb3VyJylcbn1cblxuaWYoaWRBcnIubGVuZ3RoID09PSA1KXtcbiAgICB1c2VyVGFibGVQbGFjZS5jbGFzc0xpc3QuYWRkKCdfZml2ZScpXG59XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3Blbi1idG5cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+e1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYm94XCIpLmNsYXNzTGlzdC50b2dnbGUoXCJzaGFrZVwiKVxuICAgIC8vIHNldFRpbWVvdXQoKCkgPT57XG4gICAgLy9cbiAgICAvLyB9LCAxMDAwKVxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYm94X19jYXBcIikuY2xhc3NMaXN0LnRvZ2dsZSgnb3BlbicpXG4gICAgc2V0VGltZW91dCgoKSA9PntcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ib3hfX2NhcC1mcm9udFwiKS5jbGFzc0xpc3QudG9nZ2xlKFwiaGlkZVwiKVxuICAgIH0sIDQ1MClcblxuXG59KVxuZnVuY3Rpb24gc3RhcnRDb3VudGRvd24oZW5kVGltZSkge1xuICAgIGNvbnN0IGhvdXJzRWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50aW1lcl9faG91cnMtaXRlbVwiKTtcbiAgICBjb25zdCBtaW51dGVzRWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50aW1lcl9fbWludXRlcy1pdGVtXCIpO1xuICAgIGNvbnN0IHNlY29uZHNFbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRpbWVyX19zZWNvbmRzLWl0ZW1cIik7XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVUaW1lcigpIHtcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIGNvbnN0IHRpbWVMZWZ0ID0gZW5kVGltZSAtIG5vdztcblxuICAgICAgICBpZiAodGltZUxlZnQgPD0gMCkge1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lckludGVydmFsKTtcbiAgICAgICAgICAgIHVwZGF0ZURpZ2l0cyhob3Vyc0VscywgXCIwMFwiKTtcbiAgICAgICAgICAgIHVwZGF0ZURpZ2l0cyhtaW51dGVzRWxzLCBcIjAwXCIpO1xuICAgICAgICAgICAgdXBkYXRlRGlnaXRzKHNlY29uZHNFbHMsIFwiMDBcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBob3VycyA9IE1hdGguZmxvb3IoKHRpbWVMZWZ0IC8gKDEwMDAgKiA2MCAqIDYwKSkgJSAyNCk7XG4gICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKCh0aW1lTGVmdCAvICgxMDAwICogNjApKSAlIDYwKTtcbiAgICAgICAgY29uc3Qgc2Vjb25kcyA9IE1hdGguZmxvb3IoKHRpbWVMZWZ0IC8gMTAwMCkgJSA2MCk7XG5cbiAgICAgICAgdXBkYXRlRGlnaXRzKGhvdXJzRWxzLCBTdHJpbmcoaG91cnMpLnBhZFN0YXJ0KDIsIFwiMFwiKSk7XG4gICAgICAgIHVwZGF0ZURpZ2l0cyhtaW51dGVzRWxzLCBTdHJpbmcobWludXRlcykucGFkU3RhcnQoMiwgXCIwXCIpKTtcbiAgICAgICAgdXBkYXRlRGlnaXRzKHNlY29uZHNFbHMsIFN0cmluZyhzZWNvbmRzKS5wYWRTdGFydCgyLCBcIjBcIikpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZURpZ2l0cyhlbGVtZW50cywgdmFsdWUpIHtcbiAgICAgICAgZWxlbWVudHNbMF0udGV4dENvbnRlbnQgPSB2YWx1ZVswXTtcbiAgICAgICAgZWxlbWVudHNbMV0udGV4dENvbnRlbnQgPSB2YWx1ZVsxXTtcbiAgICB9XG5cbiAgICB1cGRhdGVUaW1lcigpO1xuICAgIGNvbnN0IHRpbWVySW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCh1cGRhdGVUaW1lciwgMTAwMCk7XG59XG5cbmNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG5jb25zdCBlbmRPZkRheSA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSwgbm93LmdldERhdGUoKSwgMjMsIDU5LCA1OSkuZ2V0VGltZSgpO1xuXG5zdGFydENvdW50ZG93bihlbmRPZkRheSk7XG5cblxuIl19
